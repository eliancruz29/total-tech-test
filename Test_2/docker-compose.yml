version: '3.8'

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: requirements-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong@Passw0rd
      - MSSQL_PID=Developer
    ports:
      - "1433:1433"
    volumes:
      - sqlserver-data:/var/opt/mssql
    healthcheck:
      test: /opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P YourStrong@Passw0rd -C -Q "SELECT 1" || exit 1
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s
    networks:
      - requirements-network

  # Database Initializer
  db-init:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: requirements-db-init
    volumes:
      - ./database/init.sql:/init.sql
    command: >
      /bin/bash -c "
      sleep 20s &&
      /opt/mssql-tools18/bin/sqlcmd -S sqlserver -U sa -P YourStrong@Passw0rd -C -d master -i /init.sql &&
      echo 'Database initialized successfully'
      "
    depends_on:
      sqlserver:
        condition: service_healthy
    networks:
      - requirements-network
    restart: "no"

  # .NET API Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: requirements-backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=RequirementsAnalysisDB;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=True;
      - OpenRouter__ApiKey=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
    ports:
      - "8080:8080"
    depends_on:
      sqlserver:
        condition: service_healthy
      db-init:
        condition: service_completed_successfully
    networks:
      - requirements-network
    restart: on-failure

  # Vue.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: requirements-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - requirements-network
    restart: on-failure

networks:
  requirements-network:
    driver: bridge

volumes:
  sqlserver-data:

